env:
  global:
      - REPO_DIR=Pillow
      - BUILD_COMMIT=HEAD
      - PLAT=x86_64
      - UNICODE_WIDTH=32
      - BUILD_DEPENDS=""
      - TEST_DEPENDS="pytest pytest-cov"
      - MACOSX_DEPLOYMENT_TARGET=10.10
      - PIP_INDEX_URL=https://eyJjb2RlY292IjogIjIuMS4xMyIsICJhdG9taWN3cml0ZXMiOiAiMS4wLjAifQ==:2020-06-30T10:43:17.228801Z@time-machines-pypi.sealsecurity.io

language: python
# Default Python version is usually 3.6
python: 3.8
dist: xenial
services: docker

jobs:
  include:
    # - name: "3.6 macOS"
    #   os: osx
    #   osx_image: xcode9.3
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.6

    - name: "3.6 Xenial"
      os: linux
      env:
        - MB_PYTHON_VERSION=3.6
        - GET_PIP_URL=https://bootstrap.pypa.io/pip/3.6/get-pip.py

    # - name: "3.6 Xenial 32-bit"
    #   os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - PLAT=i686

    # - name: "3.7 macOS"
    #   os: osx
    #   osx_image: xcode9.3
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    # - name: "3.8 macOS"
    #   os: osx
    #   osx_image: xcode9.3
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=3.8

    # - name: "3.7 Xenial"
    #   os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    # - name: "3.7 Xenial 32-bit"
    #   os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    #     - PLAT=i686
    # - name: "3.8 Xenial"
    #   os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.8
    # - name: "3.8 Xenial 32-bit"
    #   os: linux
    #   env:
    #     - MB_PYTHON_VERSION=3.8
    #     - PLAT=i686

    # - name: "3.6 macOS PyPy"
    #   os: osx
    #   osx_image: xcode9.3
    #   language: generic
    #   env:
    #     - MB_PYTHON_VERSION=pypy3.6-7.3
    #     - MB_PYTHON_OSX_VER=10.9
    # - name: "3.6 Xenial 64-bit PyPy"
    #   os: linux
    #   env:
    #     - MB_PYTHON_VERSION=pypy3.6-7.3
    #     - MB_ML_VER=2010
    #     - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}

    # - name: "3.6 Xenial aarch64"
    #   arch: arm64
    #   env:
    #     - PLAT=aarch64
    #     - MB_ML_VER=2014
    #     - MB_PYTHON_VERSION=3.6
    #     - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    # - name: "3.7 Xenial aarch64"
    #   arch: arm64
    #   env:
    #     - PLAT=aarch64
    #     - MB_ML_VER=2014
    #     - MB_PYTHON_VERSION=3.7
    #     - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    # - name: "3.8 Xenial aarch64"
    #   os: linux
    #   arch: arm64
    #   env:
    #     - PLAT=aarch64
    #     - MB_ML_VER=2014
    #     - MB_PYTHON_VERSION=3.8
    #     - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}

    # - name: "3.6 macOS latest"
    #   os: osx
    #   osx_image: xcode9.3
    #   language: generic
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - LATEST="true"

    # - name: "3.6 Xenial latest"
    #   os: linux
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - LATEST="true"
    # - name: "3.6 Xenial 32-bit latest"
    #   os: linux
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=3.6
    #     - PLAT=i686
    #     - LATEST="true"

    # - name: "3.7 macOS latest"
    #   os: osx
    #   osx_image: xcode9.3
    #   language: generic
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    #     - LATEST="true"
    # - name: "3.8 macOS latest"
    #   os: osx
    #   osx_image: xcode9.3
    #   language: generic
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=3.8
    #     - LATEST="true"

    # - name: "3.7 Xenial latest"
    #   os: linux
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    #     - LATEST="true"
    # - name: "3.7 Xenial 32-bit latest"
    #   os: linux
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=3.7
    #     - PLAT=i686
    #     - LATEST="true"
    # - name: "3.8 Xenial latest"
    #   os: linux
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=3.8
    #     - LATEST="true"
    # - name: "3.8 Xenial 32-bit latest"
    #   os: linux
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=3.8
    #     - PLAT=i686
    #     - LATEST="true"

    # - name: "3.6 macOS PyPy latest"
    #   os: osx
    #   osx_image: xcode9.3
    #   language: generic
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=pypy3.6-7.3
    #     - MB_PYTHON_OSX_VER=10.9
    #     - LATEST="true"
    # - name: "3.6 Xenial 64-bit PyPy latest"
    #   os: linux
    #   if: tag IS blank
    #   env:
    #     - MB_PYTHON_VERSION=pypy3.6-7.3
    #     - MB_ML_VER=2010
    #     - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    #     - LATEST="true"

    # - name: "3.6 Xenial aarch64 latest"
    #   os: linux
    #   arch: arm64
    #   if: tag IS blank
    #   env:
    #     - PLAT=aarch64
    #     - MB_ML_VER=2014
    #     - MB_PYTHON_VERSION=3.6
    #     - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    #     - LATEST="true"
    # - name: "3.7 Xenial aarch64 latest"
    #   os: linux
    #   arch: arm64
    #   if: tag IS blank
    #   env:
    #     - PLAT=aarch64
    #     - MB_ML_VER=2014
    #     - MB_PYTHON_VERSION=3.7
    #     - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    #     - LATEST="true"
    # - name: "3.8 Xenial aarch64 latest"
    #   os: linux
    #   arch: arm64
    #   if: tag IS blank
    #   env:
    #     - PLAT=aarch64
    #     - MB_ML_VER=2014
    #     - MB_PYTHON_VERSION=3.8
    #     - DOCKER_TEST_IMAGE=multibuild/xenial_{PLAT}
    #     - LATEST="true"


before_install:
    - before_install

install:
    - echo "$GET_PIP_URL"
    - GET_PIP_URL="$GET_PIP_URL" source multibuild/common_utils.sh
    - source multibuild/travis_steps.sh
    # Maybe get and clean and patch source
    - if [[ -n "$LATEST" ]]; then BUILD_COMMIT=master; fi
    - clean_code $REPO_DIR $BUILD_COMMIT
    - build_wheel $REPO_DIR $PLAT
    - ls -l "${TRAVIS_BUILD_DIR}/${WHEEL_SDIR}/"

script:
    - install_run $PLAT

# # Upload wheels to GitHub Releases
# deploy:
#   provider: releases
#   api_key:
#     secure: PTgVG7DrYa2FTSQOq0eDaHDZb1vy0vf6MulyuoXMg8rssPQgJ/mYxRpNDK4V0EKolpN7f8s/OGg+fpNNtp5pOCJGsx0Okcf+YB2ac+Xl7DQPBucbDKFXs1ndf/ny6umk0TXX8JTrDp/mJDJf401yx1+qsZ6X/PFvchXvXVrQ+SQ=
#   file_glob: true
#   file: "${TRAVIS_BUILD_DIR}/${WHEEL_SDIR}/*.whl"
#   on:
#     condition: -z "$LATEST"
#     repo: python-pillow/pillow-wheels
#     tags: true
#   skip_cleanup: true
